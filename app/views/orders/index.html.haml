=  stripe_javascript_tag
%script(src="https://www.paypal.com/sdk/js?client-id=#{ENV['PAYPAL_CLIENT_ID']}")

%div
  .container
    %h1 List of products
    = form_tag({:controller => "orders", :action => "submit" }, {:id => 'order-details'}) do
      %input{id:'order-type', :type=>"hidden", :value=>"stripe", :name=>'orders[payment_gateway]'}
      .form_row
        %h4 Charges/Payments
        - @products_purchase.each do |product|
          %div{'data-charges-and-payments-section': true}
            = radio_button_tag 'orders[product_id]', product.id, @products_purchase.first == product
            %span{id: "radioButtonName#{product.id}"} #{product.name}
            %span{id: "radioButtonPrice#{product.id}", :'data-price' => "#{product.price_cents}"} #{humanized_money_with_symbol product.price}
          %br
        %h4 Subscriptions
        - @products_subscription.each do |product|
          %div
            = radio_button_tag 'orders[product_id]', product.id, false
            %span{id: "radioButtonName#{product.id}"} #{product.name}
            %span{id: "radioButtonPrice#{product.id}", :'data-price' => "#{product.price_cents}"} #{humanized_money_with_symbol product.price}
          %br
      %hr
      %h1 Payment Method
      .form_row
        %div
          = radio_button_tag 'payment-selection', 'stripe', true, onclick: "changeTab();"
          %span Stripe
        %br
        %div
          = radio_button_tag 'payment-selection', 'paypal', false, onclick: "changeTab();"
          %span Paypal
      %br
      %br
      %div{id:'tab-stripe', class:'paymentSelectionTab active'}
        %div{id:'card-element'}
        %div{id:'card-errors', role:"alert"}
        %br
        %br
        = submit_tag "Buy Now", id: "submit-stripe", class: "bg-purple-500 text-white active:bg-purple-600 font-bold uppercase text-sm px-6 py-3 rounded-full shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150"
      %div{id:'tab-paypal', class:'paymentSelectionTab'}
        %div{id: "submit-paypal"}
      %br
      %br
      %hr
:javascript
  function changeTab() {
    var newActiveTabID = $('input[name="payment-selection"]:checked').val();
    $('.paymentSelectionTab').removeClass('active');
    $('#tab-' + newActiveTabID).addClass('active');
  }

  (function setupStripe() {
    //Initialize stripe with publishable key
    var stripe = Stripe("#{ENV['STRIPE_PUBLISHABLE_KEY']}");

    //Create Stripe credit card elements.
    var elements = stripe.elements();
    var card = elements.create('card');

    //Add a listener in order to check if
    card.addEventListener('change', function(event) {
      //the div card-errors contains error details if any
      var displayError = document.getElementById('card-errors');
      document.getElementById('submit-stripe').disabled = false;
      if (event.error) {
        // Display error
        displayError.textContent = event.error.message;
      } else {
        // Clear error
        displayError.textContent = '';
      }
    });

    // Mount Stripe card element in the #card-element div.
    card.mount('#card-element');
    var form = document.getElementById('order-details');
    // This will be called when the #submit-stripe button is clicked by the user.
    form.addEventListener('submit', function(event) {
      $('#submit-stripe').prop('disabled', true);
      event.preventDefault();
      stripe.createToken(card).then(function(result) {
        if (result.error) {
          // Inform that there was an error.
          var errorElement = document.getElementById('card-errors');
          errorElement.textContent = result.error.message;
        } else {
          // Submits the order
          var $form = $("#order-details");
          // Add a hidden input orders[token]
          $form.append($('<input type="hidden" name="orders[token]"/>').val(result.token.id));
          // Set order type
          $('#order-type').val('stripe');
          $form.submit();
        }
      });
      return false;
    });
  }());

  (function setupPaypal() {
    function isPayment() {
      return $('[data-charges-and-payments-section] input[name="orders[product_id]"]:checked').length
    }

    function submitOrderPaypal(chargeID) {
      var $form = $("#order-details");
      // Add a hidden input orders[charge_id]
      $form.append($('<input type="hidden" name="orders[charge_id]"/>').val(chargeID));
      // Set order type
      $('#order-type').val('paypal');
      $form.submit();
    }

    paypal.Buttons({
      env: "#{ENV['PAYPAL_ENV']}",
      createOrder: function() {
        $('#order-type').val("paypal");
        if (isPayment()) {
          return $.post("#{paypal_create_payment_url}", $('#order-details').serialize()).then(function(data) {
            return data.token;
          });
        } else {
          return $.post("#{paypal_create_subscription_url}", $('#order-details').serialize()).then(function(data) {
            return data.token;
          });
        }
      },
      onApprove: function(data) {
        if (isPayment()) {
          return $.post("#{paypal_execute_payment_url}", {
            paymentID: data.paymentID,
            payerID:   data.payerID
          }).then(function() {
            submitOrderPaypal(data.paymentID)
          });
        } else {
          return $.post("#{paypal_execute_subscription_url}", {
            subscriptionToken: data.orderID
          }).then(function(executeData) {
            submitOrderPaypal(executeData.id)
          });
        }
      }
    }).render('#submit-paypal');
  }());

:css
  #card-element {
    width:500px;
  }
  .paymentSelectionTab {
    display: none;
  }
  .paymentSelectionTab.active {
    display: block !important;
  }
